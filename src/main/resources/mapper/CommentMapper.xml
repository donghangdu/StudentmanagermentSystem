<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wip.dao.CommentDao">

    <!--table name-->
    <sql id="BASE_TABLE">
        t_comments
    </sql>
    <!--COLUMN name-->
    <sql id="BASE_COLUMN">
        cm.coid, cm.cid, cm.created, cm.author, cm.authorId, cm.ownerId, cm.mail,
        cm.url, cm.ip, cm.agent, cm.type, cm.status, cm.parent, cm.content
    </sql>

    <!--add comment-->
    <insert id="addComment" parameterType="com.wip.model.CommentDomain">
        INSERT INTO
          <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            cid, created, author,authorId,ownerId,mail,
            url, ip, agent, type, status, parent, content
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{cid, jdbcType=INTEGER},
            #{created, jdbcType=INTEGER},
            #{author, jdbcType=VARCHAR},
            #{authorId, jdbcType=INTEGER},
            #{ownerId, jdbcType=INTEGER},
            #{email, jdbcType=VARCHAR},
            #{url, jdbcType=VARCHAR},
            #{ip, jdbcType=VARCHAR},
            #{agent, jdbcType=VARCHAR},
            #{type, jdbcType=VARCHAR},
            #{status, jdbcType=VARCHAR},
            #{parent, jdbcType=INTEGER},
            #{content, jdbcType=LONGVARCHAR}
        </trim>
    </insert>
    <!--Get comments based on article ID-->
    <select id="getCommentByCId" resultType="com.wip.model.CommentDomain">
        SELECT
          <include refid="BASE_COLUMN"/>
        FROM
          <include refid="BASE_TABLE"/> AS cm
        WHERE
          cm.cid = #{cid, jdbcType=INTEGER}
          AND
          cm.status = 'approved'
        ORDER BY
          cm.created
    </select>

    <!--Delete comments-->
    <delete id="deleteComment">
        DELETE FROM
          <include refid="BASE_TABLE"/>
        WHERE
          coid = #{coid, jdbcType=INTEGER}
    </delete>

    <!--Get total comments-->
    <select id="getCommentCount" resultType="java.lang.Long">
        SELECT
          COUNT(*)
        FROM
          <include refid="BASE_TABLE"/>
    </select>

    <!--Find a list of comments by criteria-->
    <select id="getCommentsByCond" resultType="com.wip.model.CommentDomain" parameterType="com.wip.dto.cond.CommentCond">
        SELECT
          <include refid="BASE_COLUMN"/>
        FROM
          <include refid="BASE_TABLE"/> AS cm
        <where>
            <if test="status != null">
                AND cm.status = #{status, jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                AND cm.created &gt;= #{startTime, jdbcType=INTEGER}
            </if>
            <if test="endTime != null">
                AND cm.created &lt;= #{endTime, jdbcType=INTEGER}
            </if>
            <if test="parent != null">
                AND cm.parent = #{parent, jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY cm.created
    </select>

    <!--Get comments by ID-->
    <select id="getCommentById" resultType="com.wip.model.CommentDomain">
        SELECT
          <include refid="BASE_COLUMN"/>
        FROM
          <include refid="BASE_TABLE"/> AS cm
        WHERE
          cm.coid = #{coid, jdbcType=INTEGER}
    </select>

    <!--Update comment status-->
    <update id="updateCommentStatus">
        UPDATE
          <include refid="BASE_TABLE"/>
        SET
          status = #{status, jdbcType=VARCHAR}
        WHERE
          coid = #{coid, jdbcType=INTEGER}
    </update>


</mapper>